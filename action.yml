#
# GitHub Action manifest for PSRule
#
name: 'PSRule'
description: 'Run rules in a GitHub repository.'
author: 'Microsoft'
branding:
  icon: 'check-circle'
  color: 'green'
inputs:

  inputType:
    description: 'Determines the type of input to use for PSRule.'
    default: 'repository'
    required: false

  inputPath:
    description: 'The path PSRule will look for files to validate.'
    default: ''
    required: false

  modules:
    description: 'A comma separated list of modules to use for analysis.'
    default: ''
    required: false

  source:
    description: 'An path containing rules to use for analysis.'
    default: '.ps-rule/'
    required: false

  baseline:
    description: 'The name of a PSRule baseline to use.'
    default: ''
    required: false

  conventions:
    description: 'A comma separated list of conventions to use.'
    default: ''
    required: false

  outputFormat:
    description: 'The format to use when writing results to disk. When set to None results are not written to disk.'
    default: 'None'
    required: false

  outputPath:
    description: 'The file path to write results to.'
    default: ''
    required: false

  path:
    description: 'The working directory PSRule is run from.'
    default: ''
    required: false

  prerelease:
    description: 'Determine if a pre-release module version is installed.'
    default: 'false'
    required: false

  version:
    description: 'The specific version of PSRule to use.'
    default: ''
    required: false

runs:
  using: 'composite'
  steps:
  - name: 'Analysis'
    shell: pwsh
    working-directory: ${{ github.workspace }}
    run: |-
      ${{ github.action_path }}/powershell.ps1 -InputType '${{ inputs.inputType }}' -InputPath '${{ inputs.inputPath }}' -Modules '${{ inputs.modules }}' -Source '${{ inputs.source }}' -Baseline '${{ inputs.baseline }}' -Conventions '${{ inputs.conventions }}' -OutputFormat '${{ inputs.outputFormat }}' -OutputPath '${{ inputs.outputPath }}' -Path '${{ inputs.path }}' -PreRelease '${{ inputs.prerelease }}' -Version '${{ inputs.version }}'
